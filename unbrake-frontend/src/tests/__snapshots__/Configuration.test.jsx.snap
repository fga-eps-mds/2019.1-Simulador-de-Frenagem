// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Configuration /> render() renders the component 1`] = `
<WithStyles(Grid)
  alignItems="center"
  className="Configuration-configuration-10"
  container={true}
>
  <div>
    <WithStyles(Grid)
      className="Configuration-title-7"
      container={true}
      item={true}
      justify="center"
    >
      <WithStyles(Grid)
        alignItems="center"
        container={true}
        item={true}
        justify="center"
        xs={10}
      >
        <WithStyles(Grid)
          className="Configuration-title-7"
          item={true}
          xs={4}
        >
          <h2>
            Upload arquivo de 
            Configuração
          </h2>
        </WithStyles(Grid)>
        <WithStyles(Grid)
          className="Configuration-grid-5"
          item={true}
          xs={4}
        >
          <WithStyles(Input)
            name="configuration"
            onChange={[Function]}
            type="file"
          />
        </WithStyles(Grid)>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
    <WithStyles(Grid)
      className="Configuration-grid-5"
      alignItems="center"
      container={true}
      item={true}
      justify="center"
      xs={12}
    >
      <label
        htmlFor="contained-button-file"
      >
        <input
          className="Configuration-input-9"
          id="contained-button-file"
          name="calibration"
          onChange={[Function]}
          type="file"
        />
        <WithStyles(Paper)
          className="Configuration-rootUploadFile-10"
        >
          <WithStyles(IconButton)
            component="span"
          >
            <pure(CloudUploadIcon)
              style={
                Object {
                  "color": "black",
                }
              }
            />
          </WithStyles(IconButton)>
          <WithStyles(WithFormControlContext(InputBase))
            disabled={true}
            fullWidth={false}
            inputComponent="input"
            multiline={false}
            placeholder="Upload do arquivo de configuração"
            type="text"
            value=""
          />
        </WithStyles(Paper)>
      </label>
      <WithStyles(Grid)
        className="Configuration-title-7"
        item={true}
        xs={4}
      >
        <TextField
          className="Configuration-formControl-8"
          id="outlined-select-currency"
          label="Configurações"
          margin="normal"
          name="dataBaseConfiguration"
          onChange={[Function]}
          required={false}
          select={true}
          value={0}
          variant="outlined"
        >
          <WithStyles(MenuItem)
            key="0"
            value={0}
          />
          <WithStyles(MenuItem)
            key="NaN"
          />
        </TextField>
      </WithStyles(Grid)>
      <WithStyles(Button)
        color="secondary"
        onClick={[Function]}
        variant="contained"
      >
        Configuração Padrão
      </WithStyles(Button)>
    </WithStyles(Grid)>
    <WithStyles(Grid)
      className="Configuration-title-7"
      alignItems="center"
      className="Configuration-form-9"
      container={true}
      item={true}
      xs={12}
    >
      <WithStyles(ReduxForm)
        configuration={
          Object {
            "CONFIG_ENSAIO": Object {
              "LSL": "",
              "LWT": "",
              "NOS": "",
              "TAO": false,
              "TAS": "",
              "TAT": "",
              "TBS": "",
              "TMO": false,
              "USL": "",
              "UWT": "",
            },
            "name": "",
          }
        }
        handleClickSave={[Function]}
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      className="Configuration-grid-5"
      item={true}
      xs={4}
    >
      <label
        htmlFor="contained-button-file"
      >
        <input
          className="Configuration-input-9"
          id="contained-button-file"
          name="configuration"
          onChange={[Function]}
          type="file"
        />
        <WithStyles(Paper)
          className="Configuration-rootUploadFile-10"
        >
          <WithStyles(IconButton)
            component="span"
          >
            <pure(CloudUploadIcon)
              style={
                Object {
                  "color": "black",
                }
              }
            />
          </WithStyles(IconButton)>
          <WithStyles(WithFormControlContext(InputBase))
            disabled={true}
            fullWidth={false}
            inputComponent="input"
            multiline={false}
            placeholder="Upload do arquivo de configuração"
            type="text"
            value=""
          />
        </WithStyles(Paper)>
      </label>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
  <WithStyles(ReduxForm)
    configuration={
      Object {
        "CONFIG_ENSAIO": Object {
          "LSL": "",
          "LWT": "",
          "NOS": "",
          "PTD": "",
          "TAO": false,
          "TAS": "",
          "TAT": "",
          "TBS": "",
          "TMO": false,
          "USL": "",
          "UWT": "",
        },
      }
    }
  />
  </div>
  <WithStyles(Dialog)
    aria-labelledby="form-dialog-title"
    onClose={[Function]}
    open={false}
  >
    <WithStyles(DialogTitle)
      id="form-dialog-title"
    >
      Nome da Configuração
    </WithStyles(DialogTitle)>
    <WithStyles(DialogContent)>
      <WithStyles(DialogContentText)>
        Insira aqui o nome que você deseja dar para este arquivo de configuração
      </WithStyles(DialogContentText)>
      <TextField
        autoFocus={true}
        fullWidth={true}
        label="Nome"
        margin="dense"
        name="name"
        onChange={[Function]}
        required={false}
        select={false}
        type="text"
        variant="standard"
      />
    </WithStyles(DialogContent)>
    <WithStyles(DialogActions)>
      <WithStyles(Button)
        color="primary"
        onClick={[Function]}
      >
        Cancelar
      </WithStyles(Button)>
      <WithStyles(Button)
        color="primary"
        onClick={[Function]}
      >
        Cadastrar
      </WithStyles(Button)>
    </WithStyles(DialogActions)>
  </WithStyles(Dialog)>
</WithStyles(Grid)>
`;
