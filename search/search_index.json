{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"arquitetura/","text":"Documento de Arquitetura Este documento tem como objetivo relatar de forma t\u00e9cnica o software utilizando v\u00e1rias vis\u00f5es da arquitetura do mesmo. Este documento \u00e9 conhecido na literatura como 4+1 architecture blueprints . Cen\u00e1rios Os cen\u00e1rios est\u00e3o escritos neste link . Vis\u00e3o L\u00f3gica Uma breve vis\u00e3o de nossa arquitetura Nosso projeto est\u00e1 sendo modelado com uma arquitetura de microservi\u00e7os que tem 4 servi\u00e7os base: Simulador: Um servidor escrito em golang que \u00e9 respons\u00e1vel tanto por receber os arquivos de configura\u00e7\u00e3o quanto de fornecer dados em stream para o requisitante. API: A API cont\u00e9m as regras de neg\u00f3cio do nosso sistema, ela recebe os arquivos de configura\u00e7\u00e3o e relaciona ele com os ensaios. Usu\u00e1rios: Servi\u00e7o que guarda realiza a autentica\u00e7\u00e3o dos usu\u00e1rios. Front-End: A interface com o usu\u00e1rio do nosso sistema que usa todos os servi\u00e7os anteriores. Front End Descrevam aqui o Front API Descreva aqui a api com diagrama de classes etc Simulador O servi\u00e7o que tem contato com o simulador tem as seguintes funcionalidades: Recebe informa\u00e7\u00f5es sobre o ensaio Realiza o controle de acesso ao simulador Realiza todas as valida\u00e7\u00f5es necess\u00e1rias no arquivo de configura\u00e7\u00e3o. Roda o ensaio recebendo as configura\u00e7\u00f5es ou os comandos interativos. Fornece os resultados realizando uma stream de dados para um determinado endere\u00e7o. Autentica\u00e7\u00e3o de usu\u00e1rio O servi\u00e7o de autentica\u00e7\u00e3o do usu\u00e1rio \u00e9 respons\u00e1vel por receber informa\u00e7\u00f5es de autentica\u00e7\u00e3o e retornar um token de acesso para consumo dos outros servi\u00e7os. Estados para conclus\u00e3o de um ensaio Vis\u00e3o de Processo Acordo de transmiss\u00e3o entre o Simulador e o FrontEnd O acordo de transmiss\u00e3o acontece com o software do FrontEnd disponibilizando uma porta e um endere\u00e7o de ip para a stream de dados em tempo real ser enviada. Ap\u00f3s essa defini\u00e7\u00e3o as informa\u00e7\u00f5es s\u00e3o mandadas via API e por fim configuradas no simulador. O simulador inicia a transmiss\u00e3o dos dados utilizando o protocolo MQTT . Vis\u00e3o de desenvolvimento As intera\u00e7\u00f5es entre os servi\u00e7os est\u00e3o representadas no diagram de componente abaixo. Vis\u00e3o f\u00edsica Para desenvolvimento utilizaremos os containers do docker . Para o funcionamento completo do nosso sistema os seguintes containers precisam ser iniciados: Consul: Ferramenta de cat\u00e1logo de servi\u00e7os Postgres: Banco de dados Simulador: Servidor que cont\u00e9m o software que comunica com o hardware de simula\u00e7\u00e3o. FrontEnd: Inicia a interface de usu\u00e1rio Broker: Para realizar a comunica\u00e7\u00e3o do simulador com o Front via MQTT Autenticador: Servi\u00e7o que realiza a autentica\u00e7\u00e3o dos usu\u00e1rios para o uso dos outros servi\u00e7os. O deploy ser\u00e1 realizado utilizando o orquestrador de containers kubernetes neste link .","title":"Arquitetura do projeto"},{"location":"arquitetura/#documento-de-arquitetura","text":"Este documento tem como objetivo relatar de forma t\u00e9cnica o software utilizando v\u00e1rias vis\u00f5es da arquitetura do mesmo. Este documento \u00e9 conhecido na literatura como 4+1 architecture blueprints .","title":"Documento de Arquitetura"},{"location":"arquitetura/#cenarios","text":"Os cen\u00e1rios est\u00e3o escritos neste link .","title":"Cen\u00e1rios"},{"location":"arquitetura/#visao-logica","text":"","title":"Vis\u00e3o L\u00f3gica"},{"location":"arquitetura/#uma-breve-visao-de-nossa-arquitetura","text":"Nosso projeto est\u00e1 sendo modelado com uma arquitetura de microservi\u00e7os que tem 4 servi\u00e7os base: Simulador: Um servidor escrito em golang que \u00e9 respons\u00e1vel tanto por receber os arquivos de configura\u00e7\u00e3o quanto de fornecer dados em stream para o requisitante. API: A API cont\u00e9m as regras de neg\u00f3cio do nosso sistema, ela recebe os arquivos de configura\u00e7\u00e3o e relaciona ele com os ensaios. Usu\u00e1rios: Servi\u00e7o que guarda realiza a autentica\u00e7\u00e3o dos usu\u00e1rios. Front-End: A interface com o usu\u00e1rio do nosso sistema que usa todos os servi\u00e7os anteriores.","title":"Uma breve vis\u00e3o de nossa arquitetura"},{"location":"arquitetura/#front-end","text":"Descrevam aqui o Front","title":"Front End"},{"location":"arquitetura/#api","text":"Descreva aqui a api com diagrama de classes etc","title":"API"},{"location":"arquitetura/#simulador","text":"O servi\u00e7o que tem contato com o simulador tem as seguintes funcionalidades: Recebe informa\u00e7\u00f5es sobre o ensaio Realiza o controle de acesso ao simulador Realiza todas as valida\u00e7\u00f5es necess\u00e1rias no arquivo de configura\u00e7\u00e3o. Roda o ensaio recebendo as configura\u00e7\u00f5es ou os comandos interativos. Fornece os resultados realizando uma stream de dados para um determinado endere\u00e7o.","title":"Simulador"},{"location":"arquitetura/#autenticacao-de-usuario","text":"O servi\u00e7o de autentica\u00e7\u00e3o do usu\u00e1rio \u00e9 respons\u00e1vel por receber informa\u00e7\u00f5es de autentica\u00e7\u00e3o e retornar um token de acesso para consumo dos outros servi\u00e7os.","title":"Autentica\u00e7\u00e3o de usu\u00e1rio"},{"location":"arquitetura/#estados-para-conclusao-de-um-ensaio","text":"","title":"Estados para conclus\u00e3o de um ensaio"},{"location":"arquitetura/#visao-de-processo","text":"","title":"Vis\u00e3o de Processo"},{"location":"arquitetura/#acordo-de-transmissao-entre-o-simulador-e-o-frontend","text":"O acordo de transmiss\u00e3o acontece com o software do FrontEnd disponibilizando uma porta e um endere\u00e7o de ip para a stream de dados em tempo real ser enviada. Ap\u00f3s essa defini\u00e7\u00e3o as informa\u00e7\u00f5es s\u00e3o mandadas via API e por fim configuradas no simulador. O simulador inicia a transmiss\u00e3o dos dados utilizando o protocolo MQTT .","title":"Acordo de transmiss\u00e3o entre o Simulador e o FrontEnd"},{"location":"arquitetura/#visao-de-desenvolvimento","text":"As intera\u00e7\u00f5es entre os servi\u00e7os est\u00e3o representadas no diagram de componente abaixo.","title":"Vis\u00e3o de desenvolvimento"},{"location":"arquitetura/#visao-fisica","text":"Para desenvolvimento utilizaremos os containers do docker . Para o funcionamento completo do nosso sistema os seguintes containers precisam ser iniciados: Consul: Ferramenta de cat\u00e1logo de servi\u00e7os Postgres: Banco de dados Simulador: Servidor que cont\u00e9m o software que comunica com o hardware de simula\u00e7\u00e3o. FrontEnd: Inicia a interface de usu\u00e1rio Broker: Para realizar a comunica\u00e7\u00e3o do simulador com o Front via MQTT Autenticador: Servi\u00e7o que realiza a autentica\u00e7\u00e3o dos usu\u00e1rios para o uso dos outros servi\u00e7os. O deploy ser\u00e1 realizado utilizando o orquestrador de containers kubernetes neste link .","title":"Vis\u00e3o f\u00edsica"},{"location":"cenarios/","text":"T\u00edtulo Enviando um arquivo de calibra\u00e7\u00e3o/configura\u00e7\u00e3o Objetivo Fluxo para enviar uma pre-configura\u00e7\u00e3o via arquivo Contexto Inicio da configura\u00e7\u00e3o de um experimento Autores Usu\u00e1rio Recurso Acesso ao sistema Epis\u00f3dios O usu\u00e1rio clica para enviar o arquivo de configura\u00e7\u00e3o, a caixa de sele\u00e7\u00e3o abre, o usu\u00e1rio realiza o upload do arquivo. [1] Exce\u00e7\u00e3o O usu\u00e1rio pode usar o bot\u00e3o de emergencia para cancelar o experimento. T\u00edtulo Iniciando um experimento Objetivo Iniciando uma an\u00e1lise de um freio Contexto Iniciando um experimento Autores Usu\u00e1rio Recurso Acesso ao sistema Epis\u00f3dios O usu\u00e1rio envia um arquivo de calibra\u00e7\u00e3o e configura\u00e7\u00e3o [1], o arquivo passa por uma valida\u00e7\u00e3o e ap\u00f3s isso o experimento vai para a fila de execu\u00e7\u00e3o. Exce\u00e7\u00e3o [1] caso o arquivo esteja inv\u00e1lido um erro ser\u00e1 apresentado T\u00edtulo Experimento na fila de execu\u00e7\u00e3o Objetivo Experimento esperando para ser executado na fila Contexto Experimento enviado Autores Sistema Recurso Acesso ao sistema Epis\u00f3dios O experimento espera na fila de execu\u00e7\u00e3o at\u00e9 ser executado pelo simulador Exce\u00e7\u00e3o T\u00edtulo Modo interativo Objetivo O usu\u00e1rio pode realizar opera\u00e7\u00f5es com o simulador sem o uso de arquivos Contexto Programa aberto e calibra\u00e7\u00e3o feita Autores Usu\u00e1rio Recurso Acesso ao sistema Epis\u00f3dios O usu\u00e1rio seleciona cada opera\u00e7\u00e3o que deseja trabalhar no simulador naquele momento [1] Exce\u00e7\u00e3o O usu\u00e1rio pode usar o bot\u00e3o de emergencia para cancelar a opera\u00e7\u00e3o T\u00edtulo Cancelamento do experimento Objetivo Cancelar o experimento enquanto ele est\u00e1 sendo executado Contexto Experimento rodando Autores Sistema e Usu\u00e1rio Recurso Acesso ao sistema Epis\u00f3dios O usu\u00e1rio pede para cancelar o ensaio em tempo de execu\u00e7\u00e3o e o experimento e cancelado. Exce\u00e7\u00e3o","title":"Cenarios"},{"location":"diagrama-de-classe/","text":"Hist\u00f3rico de Revis\u00e3o Data Respons\u00e1vel Vers\u00e3o Mudan\u00e7a realizada 06/04/19 @leticiaarj 1 Modelo Inicial do Diagrama em UML que ser\u00e1 utilizado no projeto 13/04/19 @leticiaarj , @VictorLeviPeixoto 2 Nova vers\u00e3o do diagrama de classes, implementando a vis\u00e3o de pacotes Vers\u00e3o 1 Vers\u00e3o 2","title":"Diagrama de Classes da API"},{"location":"diagrama-de-classe/#historico-de-revisao","text":"Data Respons\u00e1vel Vers\u00e3o Mudan\u00e7a realizada 06/04/19 @leticiaarj 1 Modelo Inicial do Diagrama em UML que ser\u00e1 utilizado no projeto 13/04/19 @leticiaarj , @VictorLeviPeixoto 2 Nova vers\u00e3o do diagrama de classes, implementando a vis\u00e3o de pacotes","title":"Hist\u00f3rico de Revis\u00e3o"},{"location":"diagrama-de-classe/#versao-1","text":"","title":"Vers\u00e3o 1"},{"location":"diagrama-de-classe/#versao-2","text":"","title":"Vers\u00e3o 2"},{"location":"estrutura-analitica-do-produto/","text":"Hist\u00f3rico de Revis\u00e3o Data Respons\u00e1vel Vers\u00e3o Mudan\u00e7a realizada 06/04/19 @ViniciusBernardo 1 Modelo Inicial da EAP Vers\u00e3o 1","title":"Estrutura Anal\u00edtica do UnBrake"},{"location":"estrutura-analitica-do-produto/#historico-de-revisao","text":"Data Respons\u00e1vel Vers\u00e3o Mudan\u00e7a realizada 06/04/19 @ViniciusBernardo 1 Modelo Inicial da EAP","title":"Hist\u00f3rico de Revis\u00e3o"},{"location":"estrutura-analitica-do-produto/#versao-1","text":"","title":"Vers\u00e3o 1"},{"location":"plano-de-custo/","text":"MathJax.Hub.Config({ tex2jax: { skipTags: ['script', 'noscript', 'style', 'textarea', 'pre'], inlineMath: [['$','$']] } }); 1. Introdu\u00e7\u00e3o Este documento abrange uma vis\u00e3o detalhada do custo estimado para o desenvolvimento do produto UnBrake. O custo total est\u00e1 dividido em 3 parte: Custo dos desenvolvedores e gerentes; Custo de equipamentos e infraestrutura; Margem de lucro e risco do projeto (dependem dos dois citados acima) 2. Estimativa do custo de pessoal Levando em considera\u00e7\u00e3o a m\u00e9dia salarial para cada papel espec\u00edfico da equipe (desenvolvedor, arquiteto, devops, scrum master e product owner), a estimativa do custo de pessoal do desenvolvimento do produto \u00e9 dado pela seguinte equa\u00e7\u00e3o: Equa\u00e7\u00e3o custo de pessoal $cp$ $$cp = (nDevelopers * hourDeveloper + nManagers * hourManager) * (nSprints * hoursPerWeek)$$ (1) onde: $cp$: custo total de pessoal; $nDevelopers$: constante de valor 5 representando o n\u00famero de desenvolvedores na equipe; $nManagers$: constante de valor 4 representando o n\u00famero de gerentes na equipe; $hourDeveloper$: vari\u00e1vel que representa o valor da hora de um desenvolvedor. Considerado como sendo igual a 35; $hourManager$: vari\u00e1vel que representa o valor da hora de um desenvolvedor. Considerado como sendo igual a 48; $nSprints$: constante de valor 13 considerando a sprint 0; $hoursPerWeek$: vari\u00e1vel com o esfor\u00e7o m\u00e9dio em horas por semana requirido para cada membro da equipe. Considerado como sendo igual a 8. Sendo assim, temos que $cp$ \u00e9 igual a: $$cp = (5 * 35 + 4 * 48) * 13 * 8$$ $$cp = 38.168,00$$ 3. Estimativa de custo de equipamento e infraestrutura 3.1 Equipamento Para o c\u00e1culo de equipamento, ser\u00e1 considerado o valor de deprecia\u00e7\u00e3o dos notebooks utilizados pelos integrantes da equipe. Ser\u00e3o necess\u00e1rias as seguintes equa\u00e7\u00f5es de descapitaliza\u00e7\u00e3o e convers\u00e3o de juros para que o c\u00e1lculo seja aplicado corretamente: Equa\u00e7\u00e3o de descapitaliza\u00e7\u00e3o em um per\u00edodo de tempo $$valorFuturo = \\frac{valorPresente}{(1+(\\frac{taxaDepreciacaoMensal}{100})^{(\\frac{nInicio}{nFim})})}$$ (2) Equa\u00e7\u00e3o de convers\u00e3o de taxa de juros $$1+taxaConhecida = (1+taxaAlvo)^{periodo}$$ (3) O valor total de deprecia\u00e7\u00e3o dos equipamentos \u00e9 o somat\u00f3rio da diferen\u00e7a do valor de aquisi\u00e7\u00e3o de cada notebook com o seu valor ao final do projeto para uma $taxaDepreciacaoAnual$ igual a 20%, $nInicio=1$ e $nFim=3$ (o projeto possui dura\u00e7\u00e3o de 13 sprints de 1 semana). A seguinte equa\u00e7\u00e3o torna isso mais claro: Equa\u00e7\u00e3o para o c\u00e1lculo total do custo de equipamento $ce$ $$ce = \\sum_{i=1}^9 valorPresente_{i} - valorFuturo_{i}$$ (4) Aplicando a convers\u00e3o da $taxaDepreciacaoAnual$ (3) obtemos a $taxaDepreciacaoMensal$: $$1 + 0.2 = (1 + taxaDepreciacaoMensal)^{12}$$ $$(1 + 0.2)^{\\frac{1}{12}} = 1 + taxaDepreciacaoMensal$$ $$taxaDepreciacaoMensal = 0.0153$$ Aplicando a equa\u00e7\u00e3o (2) para cada um dos notebooks dos 9 membros da equipe, considerando que todos possuem o $valorPresente = 3.000,00$ e em seguida utilizando os valores conhecidos na equa\u00e7\u00e3o (4) chegaremos ao resultado de $ce$ Valor final de $ce$ $$valorFuturo = \\frac{3000}{1+\\frac{0.0153}{100}^{\\frac{1}{3}}}$$ $$valorFuturo = 2.847,69$$ $$ce = 9*(3000 - 2847,69)$$ $$ce = 1.370,79$$ 3.2 Infraestrutura O sistema ficar\u00e1 hospedado em um servidor Kubernetes em nuvem da DigitalOcean durante seus 3 meses de dura\u00e7\u00e3o. De acordo com o site oficial da DigitalOcean , o valor mensal de um Kubernetes \u00e9 de 30 d\u00f3lares americanos. Considerando o valor m\u00e9dio do d\u00f3lar americano como sendo R$ 3,85, temos que o custo de infraestrutura $ci$ do projeto \u00e9 de: Custo de infraestrutura $ci$ $$ci = 3 * 30 * 3,85$$ $$ci = 346,50$$ 4. Lucro, Risco e custo total A porcentagem de lucro e risco ser\u00e3o aplicados sobre a somat\u00f3ria do custo de pessoal $cp$, custo de equipamento $ce$ e custo da infraestrutura $ci$ calculados nos t\u00f3picos anteriores. A taxa de lucro aplicada sera de 20% ($lucro = 0.2$). J\u00e1 a taxa de risco ser\u00e1 de 45% devido aos seguintes fatores: * O sistema precisa lidar com dados em real time; * \u00c9 necess\u00e1rio fazer comunica\u00e7\u00e3o serial com o sistema embarcado controlador do simulador de frenagem; * Como o simulador de frenagem \u00e9 um sistema mec\u00e2nico, existe o requisito impl\u00edcito que o software precisa ter uma alta qualidade e n\u00edvel de testes. Sendo assim, o custo total $ct$ to projeto fica: Custo total do projeto $$ct = (cp + ce + ci) * (1 + 0.2 + 0.45)$$ $$ct = (38.168,00 + 1.370,79 + 346,50) * (1,65)$$ $$ct = 65.810,73$$","title":"Plano de Custo do UnBrake"},{"location":"plano-de-custo/#1-introducao","text":"Este documento abrange uma vis\u00e3o detalhada do custo estimado para o desenvolvimento do produto UnBrake. O custo total est\u00e1 dividido em 3 parte: Custo dos desenvolvedores e gerentes; Custo de equipamentos e infraestrutura; Margem de lucro e risco do projeto (dependem dos dois citados acima)","title":"1. Introdu\u00e7\u00e3o"},{"location":"plano-de-custo/#2-estimativa-do-custo-de-pessoal","text":"Levando em considera\u00e7\u00e3o a m\u00e9dia salarial para cada papel espec\u00edfico da equipe (desenvolvedor, arquiteto, devops, scrum master e product owner), a estimativa do custo de pessoal do desenvolvimento do produto \u00e9 dado pela seguinte equa\u00e7\u00e3o: Equa\u00e7\u00e3o custo de pessoal $cp$ $$cp = (nDevelopers * hourDeveloper + nManagers * hourManager) * (nSprints * hoursPerWeek)$$ (1) onde: $cp$: custo total de pessoal; $nDevelopers$: constante de valor 5 representando o n\u00famero de desenvolvedores na equipe; $nManagers$: constante de valor 4 representando o n\u00famero de gerentes na equipe; $hourDeveloper$: vari\u00e1vel que representa o valor da hora de um desenvolvedor. Considerado como sendo igual a 35; $hourManager$: vari\u00e1vel que representa o valor da hora de um desenvolvedor. Considerado como sendo igual a 48; $nSprints$: constante de valor 13 considerando a sprint 0; $hoursPerWeek$: vari\u00e1vel com o esfor\u00e7o m\u00e9dio em horas por semana requirido para cada membro da equipe. Considerado como sendo igual a 8. Sendo assim, temos que $cp$ \u00e9 igual a: $$cp = (5 * 35 + 4 * 48) * 13 * 8$$ $$cp = 38.168,00$$","title":"2. Estimativa do custo de pessoal"},{"location":"plano-de-custo/#3-estimativa-de-custo-de-equipamento-e-infraestrutura","text":"","title":"3. Estimativa de custo de equipamento e infraestrutura"},{"location":"plano-de-custo/#31-equipamento","text":"Para o c\u00e1culo de equipamento, ser\u00e1 considerado o valor de deprecia\u00e7\u00e3o dos notebooks utilizados pelos integrantes da equipe. Ser\u00e3o necess\u00e1rias as seguintes equa\u00e7\u00f5es de descapitaliza\u00e7\u00e3o e convers\u00e3o de juros para que o c\u00e1lculo seja aplicado corretamente: Equa\u00e7\u00e3o de descapitaliza\u00e7\u00e3o em um per\u00edodo de tempo $$valorFuturo = \\frac{valorPresente}{(1+(\\frac{taxaDepreciacaoMensal}{100})^{(\\frac{nInicio}{nFim})})}$$ (2) Equa\u00e7\u00e3o de convers\u00e3o de taxa de juros $$1+taxaConhecida = (1+taxaAlvo)^{periodo}$$ (3) O valor total de deprecia\u00e7\u00e3o dos equipamentos \u00e9 o somat\u00f3rio da diferen\u00e7a do valor de aquisi\u00e7\u00e3o de cada notebook com o seu valor ao final do projeto para uma $taxaDepreciacaoAnual$ igual a 20%, $nInicio=1$ e $nFim=3$ (o projeto possui dura\u00e7\u00e3o de 13 sprints de 1 semana). A seguinte equa\u00e7\u00e3o torna isso mais claro: Equa\u00e7\u00e3o para o c\u00e1lculo total do custo de equipamento $ce$ $$ce = \\sum_{i=1}^9 valorPresente_{i} - valorFuturo_{i}$$ (4) Aplicando a convers\u00e3o da $taxaDepreciacaoAnual$ (3) obtemos a $taxaDepreciacaoMensal$: $$1 + 0.2 = (1 + taxaDepreciacaoMensal)^{12}$$ $$(1 + 0.2)^{\\frac{1}{12}} = 1 + taxaDepreciacaoMensal$$ $$taxaDepreciacaoMensal = 0.0153$$ Aplicando a equa\u00e7\u00e3o (2) para cada um dos notebooks dos 9 membros da equipe, considerando que todos possuem o $valorPresente = 3.000,00$ e em seguida utilizando os valores conhecidos na equa\u00e7\u00e3o (4) chegaremos ao resultado de $ce$ Valor final de $ce$ $$valorFuturo = \\frac{3000}{1+\\frac{0.0153}{100}^{\\frac{1}{3}}}$$ $$valorFuturo = 2.847,69$$ $$ce = 9*(3000 - 2847,69)$$ $$ce = 1.370,79$$","title":"3.1 Equipamento"},{"location":"plano-de-custo/#32-infraestrutura","text":"O sistema ficar\u00e1 hospedado em um servidor Kubernetes em nuvem da DigitalOcean durante seus 3 meses de dura\u00e7\u00e3o. De acordo com o site oficial da DigitalOcean , o valor mensal de um Kubernetes \u00e9 de 30 d\u00f3lares americanos. Considerando o valor m\u00e9dio do d\u00f3lar americano como sendo R$ 3,85, temos que o custo de infraestrutura $ci$ do projeto \u00e9 de: Custo de infraestrutura $ci$ $$ci = 3 * 30 * 3,85$$ $$ci = 346,50$$","title":"3.2 Infraestrutura"},{"location":"plano-de-custo/#4-lucro-risco-e-custo-total","text":"A porcentagem de lucro e risco ser\u00e3o aplicados sobre a somat\u00f3ria do custo de pessoal $cp$, custo de equipamento $ce$ e custo da infraestrutura $ci$ calculados nos t\u00f3picos anteriores. A taxa de lucro aplicada sera de 20% ($lucro = 0.2$). J\u00e1 a taxa de risco ser\u00e1 de 45% devido aos seguintes fatores: * O sistema precisa lidar com dados em real time; * \u00c9 necess\u00e1rio fazer comunica\u00e7\u00e3o serial com o sistema embarcado controlador do simulador de frenagem; * Como o simulador de frenagem \u00e9 um sistema mec\u00e2nico, existe o requisito impl\u00edcito que o software precisa ter uma alta qualidade e n\u00edvel de testes. Sendo assim, o custo total $ct$ to projeto fica: Custo total do projeto $$ct = (cp + ce + ci) * (1 + 0.2 + 0.45)$$ $$ct = (38.168,00 + 1.370,79 + 346,50) * (1,65)$$ $$ct = 65.810,73$$","title":"4. Lucro, Risco e custo total"},{"location":"termo-de-abertura/","text":"1. Introdu\u00e7\u00e3o Este documento abordar\u00e1 os objetivos, descri\u00e7\u00e3o geral, prop\u00f3sito e justificativa, requisitos de alto n\u00edvel e partes interessadas do projeto. 2. Descri\u00e7\u00e3o geral do UnBrake O UnBrake \u00e9 um sistema que tem como finalidade configurar, calibrar, testar e analisar o sistema de frenagem desenvolvido por alunos da engenharia automotiva em conjunto com alunos da engenharia eletr\u00f4nica. 3. Prop\u00f3sito e Justificativa Atualmente, a intera\u00e7\u00e3o com o sistema embarcado de aquisi\u00e7\u00e3o e comando do sistema de frenagem \u00e9 feita atrav\u00e9s de um software desenvolvido na plataforma LabView. O UnBrake surge para melhorar o interfaceamento entre o usu\u00e1rio e o sistema de frenagem, al\u00e9m de prover a estrutura necess\u00e1ria para fazer persist\u00eancia em banco de dados de testes realizados, controle de usu\u00e1rio e tamb\u00e9m valida\u00e7\u00e3o de dados de entrada para uso apropriado do sistema. 4. Objetivos O objetivo do UnBrake \u00e9 poder ajudar usu\u00e1rios a realizarem testes no sistema de frenagem de maneira f\u00e1cil e segura. Al\u00e9m disso, seus objetivos tamb\u00e9m incluem: possibilitar o rastreamento de pessoas respons\u00e1veis por testes j\u00e1 realizados e analisar os dados coletados pelo sistema embarcado de aquisi\u00e7\u00e3o e comando do sistema de frenagem. 5. Requisitos de alto n\u00edvel O UnBrake \u00e9 composto de 4 grandes m\u00f3dulos: configura\u00e7\u00e3o, calibra\u00e7\u00e3o, ensaio e an\u00e1lise. 5.1 Configura\u00e7\u00e3o O m\u00f3dulo de configura\u00e7\u00e3o \u00e9 respons\u00e1vel por definir vari\u00e1veis de entrada que controlar\u00e3o a m\u00e1quina de estado respons\u00e1vel por um ciclo (snub) de teste do sistema. Al\u00e9m disso, nesse m\u00f3dulo s\u00e3o especificados tamb\u00e9m o arquivo de configura\u00e7\u00e3o e calibra\u00e7\u00e3o que ser\u00e3o utilizados. 5.2 Calibra\u00e7\u00e3o Este m\u00f3dulo \u00e9 respons\u00e1vel pela defini\u00e7\u00e3o dos fatores de convers\u00e3o da corrente el\u00e9trica capturada na aquisi\u00e7\u00e3o de vari\u00e1veis de interesse durante um ensaio, tais como: temperatura e velocidade. 5.3 Ensaio M\u00f3dulo respons\u00e1vel pela valida\u00e7\u00e3o dos arquivos de configura\u00e7\u00e3o e calibra\u00e7\u00e3o que ser\u00e3o usados e in\u00edcio do ensaio enviando os comandos para o sistema embarcado. 5.4 An\u00e1lise M\u00f3dulo respons\u00e1vel pela consulta de testes j\u00e1 realizados para an\u00e1lise de vari\u00e1veis de interesse e comportamento do sistema de frenagem. 6. Partes Interessadas Segue as principais partes interessadas no projeto Integrante Papel Evandro Leonardo Silva Teixeira Cliente Carla Rocha Silva Aguiar Orientadora Vinicius Ferreira Bernardo de Lima Engenheiro de Produto Jo\u00e3o Robson Santos Martins Scrum Master \u00cdcaro Pires de Souza Arag\u00e3o Devops Felipe Borges de Souza Chaves Arquiteto Victor Levi Peixoto Desenvolvedor Lucas Medeiros Rosa Desenvolvedor Let\u00edcia Karla Soares Rodrigues de Ara\u00fajo Desenvolvedora Tiago Miguel Caetano da Silva Desenvolvedor Gabriel Marques Tiveron Desenvolvedor","title":"Termo de Abertura"},{"location":"termo-de-abertura/#1-introducao","text":"Este documento abordar\u00e1 os objetivos, descri\u00e7\u00e3o geral, prop\u00f3sito e justificativa, requisitos de alto n\u00edvel e partes interessadas do projeto.","title":"1. Introdu\u00e7\u00e3o"},{"location":"termo-de-abertura/#2-descricao-geral-do-unbrake","text":"O UnBrake \u00e9 um sistema que tem como finalidade configurar, calibrar, testar e analisar o sistema de frenagem desenvolvido por alunos da engenharia automotiva em conjunto com alunos da engenharia eletr\u00f4nica.","title":"2. Descri\u00e7\u00e3o geral do UnBrake"},{"location":"termo-de-abertura/#3-proposito-e-justificativa","text":"Atualmente, a intera\u00e7\u00e3o com o sistema embarcado de aquisi\u00e7\u00e3o e comando do sistema de frenagem \u00e9 feita atrav\u00e9s de um software desenvolvido na plataforma LabView. O UnBrake surge para melhorar o interfaceamento entre o usu\u00e1rio e o sistema de frenagem, al\u00e9m de prover a estrutura necess\u00e1ria para fazer persist\u00eancia em banco de dados de testes realizados, controle de usu\u00e1rio e tamb\u00e9m valida\u00e7\u00e3o de dados de entrada para uso apropriado do sistema.","title":"3. Prop\u00f3sito e Justificativa"},{"location":"termo-de-abertura/#4-objetivos","text":"O objetivo do UnBrake \u00e9 poder ajudar usu\u00e1rios a realizarem testes no sistema de frenagem de maneira f\u00e1cil e segura. Al\u00e9m disso, seus objetivos tamb\u00e9m incluem: possibilitar o rastreamento de pessoas respons\u00e1veis por testes j\u00e1 realizados e analisar os dados coletados pelo sistema embarcado de aquisi\u00e7\u00e3o e comando do sistema de frenagem.","title":"4. Objetivos"},{"location":"termo-de-abertura/#5-requisitos-de-alto-nivel","text":"O UnBrake \u00e9 composto de 4 grandes m\u00f3dulos: configura\u00e7\u00e3o, calibra\u00e7\u00e3o, ensaio e an\u00e1lise.","title":"5. Requisitos de alto n\u00edvel"},{"location":"termo-de-abertura/#51-configuracao","text":"O m\u00f3dulo de configura\u00e7\u00e3o \u00e9 respons\u00e1vel por definir vari\u00e1veis de entrada que controlar\u00e3o a m\u00e1quina de estado respons\u00e1vel por um ciclo (snub) de teste do sistema. Al\u00e9m disso, nesse m\u00f3dulo s\u00e3o especificados tamb\u00e9m o arquivo de configura\u00e7\u00e3o e calibra\u00e7\u00e3o que ser\u00e3o utilizados.","title":"5.1 Configura\u00e7\u00e3o"},{"location":"termo-de-abertura/#52-calibracao","text":"Este m\u00f3dulo \u00e9 respons\u00e1vel pela defini\u00e7\u00e3o dos fatores de convers\u00e3o da corrente el\u00e9trica capturada na aquisi\u00e7\u00e3o de vari\u00e1veis de interesse durante um ensaio, tais como: temperatura e velocidade.","title":"5.2 Calibra\u00e7\u00e3o"},{"location":"termo-de-abertura/#53-ensaio","text":"M\u00f3dulo respons\u00e1vel pela valida\u00e7\u00e3o dos arquivos de configura\u00e7\u00e3o e calibra\u00e7\u00e3o que ser\u00e3o usados e in\u00edcio do ensaio enviando os comandos para o sistema embarcado.","title":"5.3 Ensaio"},{"location":"termo-de-abertura/#54-analise","text":"M\u00f3dulo respons\u00e1vel pela consulta de testes j\u00e1 realizados para an\u00e1lise de vari\u00e1veis de interesse e comportamento do sistema de frenagem.","title":"5.4 An\u00e1lise"},{"location":"termo-de-abertura/#6-partes-interessadas","text":"Segue as principais partes interessadas no projeto Integrante Papel Evandro Leonardo Silva Teixeira Cliente Carla Rocha Silva Aguiar Orientadora Vinicius Ferreira Bernardo de Lima Engenheiro de Produto Jo\u00e3o Robson Santos Martins Scrum Master \u00cdcaro Pires de Souza Arag\u00e3o Devops Felipe Borges de Souza Chaves Arquiteto Victor Levi Peixoto Desenvolvedor Lucas Medeiros Rosa Desenvolvedor Let\u00edcia Karla Soares Rodrigues de Ara\u00fajo Desenvolvedora Tiago Miguel Caetano da Silva Desenvolvedor Gabriel Marques Tiveron Desenvolvedor","title":"6. Partes Interessadas"},{"location":"designdocs/comunicacao-mqtt/","text":"Descri\u00e7\u00e3o do problema Como definido nos cen\u00e1rios do projeto o software necessita de atualiza\u00e7\u00e3o em tempo real das informa\u00e7\u00f5es dos sensores em um gr\u00e1fico com lat\u00eancia de at\u00e9 2 segundos. O problema \u00e9 que a arquitetura de micro servi\u00e7os faz com que a comunica\u00e7\u00e3o entre os servi\u00e7os seja feita pela rede e portanto est\u00e1 sensivel a din\u00e2mica da internet: alta lat\u00eancia, perda de pacotes, mudan\u00e7as de rotas, entrega de pacotes de forma n\u00e3o ordenada. Impacto Dependendo da arquitetura assumida o software fica dependendo totalmente da entrega da rede podendo assim fazer com que o gr\u00e1fico n\u00e3o fique fl\u00faido para o usu\u00e1rio e impedindo o mesmo de tomar algumas decis\u00f5es baseadas no feedback (como por exemplo desligar a m\u00e1quina caso o experimento n\u00e3o esteja indo bem). Poss\u00edveis solu\u00e7\u00f5es Utilizar comunica\u00e7\u00e3o via socket (Jo\u00e3o Robson) Apenas utilizar um socket para comunicar diretamente ao backend Comunicar direto com o backend Fazer com que o Front-end comunique com o back-end diretamente sem passar pela API Assinatura via API e comunica\u00e7\u00e3o direta (Felipe Borges) Fazer com que a API envie para o simulador informa\u00e7\u00f5es sobre a porta e ip e com isso comunicar uma stream de dados diretamente via front-back utilizando a API como um intemedi\u00e1rio Utilizar MQTT (Icaro Pires) Usar o protocolo MQTT Conclus\u00e3o Decidimos mesclar duas solu\u00e7\u00f5es, utilizar a API como um intermedi\u00e1rio para fazer as assinaturas e estabelecer uma stream de dados diretamente com o backend por\u00e9m utilizando o protocolo MQTT para transferir essas informa\u00e7\u00f5es. Perceba que o protocolo MQTT necessita de um broker para realizar a documenta\u00e7\u00e3o assincrona.","title":"Comunica\u00e7\u00e3o do gr\u00e1fico em tempo real"},{"location":"designdocs/comunicacao-mqtt/#descricao-do-problema","text":"Como definido nos cen\u00e1rios do projeto o software necessita de atualiza\u00e7\u00e3o em tempo real das informa\u00e7\u00f5es dos sensores em um gr\u00e1fico com lat\u00eancia de at\u00e9 2 segundos. O problema \u00e9 que a arquitetura de micro servi\u00e7os faz com que a comunica\u00e7\u00e3o entre os servi\u00e7os seja feita pela rede e portanto est\u00e1 sensivel a din\u00e2mica da internet: alta lat\u00eancia, perda de pacotes, mudan\u00e7as de rotas, entrega de pacotes de forma n\u00e3o ordenada.","title":"Descri\u00e7\u00e3o do problema"},{"location":"designdocs/comunicacao-mqtt/#impacto","text":"Dependendo da arquitetura assumida o software fica dependendo totalmente da entrega da rede podendo assim fazer com que o gr\u00e1fico n\u00e3o fique fl\u00faido para o usu\u00e1rio e impedindo o mesmo de tomar algumas decis\u00f5es baseadas no feedback (como por exemplo desligar a m\u00e1quina caso o experimento n\u00e3o esteja indo bem).","title":"Impacto"},{"location":"designdocs/comunicacao-mqtt/#possiveis-solucoes","text":"","title":"Poss\u00edveis solu\u00e7\u00f5es"},{"location":"designdocs/comunicacao-mqtt/#utilizar-comunicacao-via-socket-joao-robson","text":"Apenas utilizar um socket para comunicar diretamente ao backend","title":"Utilizar comunica\u00e7\u00e3o via socket (Jo\u00e3o Robson)"},{"location":"designdocs/comunicacao-mqtt/#comunicar-direto-com-o-backend","text":"Fazer com que o Front-end comunique com o back-end diretamente sem passar pela API","title":"Comunicar direto com o backend"},{"location":"designdocs/comunicacao-mqtt/#assinatura-via-api-e-comunicacao-direta-felipe-borges","text":"Fazer com que a API envie para o simulador informa\u00e7\u00f5es sobre a porta e ip e com isso comunicar uma stream de dados diretamente via front-back utilizando a API como um intemedi\u00e1rio","title":"Assinatura via API e comunica\u00e7\u00e3o direta (Felipe Borges)"},{"location":"designdocs/comunicacao-mqtt/#utilizar-mqtt-icaro-pires","text":"Usar o protocolo MQTT","title":"Utilizar MQTT (Icaro Pires)"},{"location":"designdocs/comunicacao-mqtt/#conclusao","text":"Decidimos mesclar duas solu\u00e7\u00f5es, utilizar a API como um intermedi\u00e1rio para fazer as assinaturas e estabelecer uma stream de dados diretamente com o backend por\u00e9m utilizando o protocolo MQTT para transferir essas informa\u00e7\u00f5es. Perceba que o protocolo MQTT necessita de um broker para realizar a documenta\u00e7\u00e3o assincrona.","title":"Conclus\u00e3o"}]}